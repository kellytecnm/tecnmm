import matplotlib.pyplot as plt
elements = ["H", "C", "O", "N", "S", "Cl", "F", "Na", "Mg", "K"]
electronegativities = [2.20, 2.55, 3.44, 3.04, 2.58, 3.16, 3.98, 0.93, 1.31, 0.82]
molar_masses = [1.01, 12.01, 16.00, 14.01, 32.06, 35.45, 18.998, 22.99, 24.305, 39.098]
# Gráfica 1: Electronegatividad vs Elemento
def plot_electronegativity():
    plt.figure(figsize=(8, 5))
    plt.bar(elements, electronegativities, color='skyblue')
    plt.title("Relación entre elementos y electronegatividad")
    plt.xlabel("Elemento")
    plt.ylabel("Electronegatividad")
    plt.grid(axis='y', linestyle='--', alpha=0.7)
    plt.show()
# Gráfica 2: Masa molar vs Elemento
def plot_molar_mass():
    plt.figure(figsize=(8, 5))
    plt.plot(elements, molar_masses, marker='o', color='green')
    plt.title("Relación entre elementos y su masa molar")
    plt.xlabel("Elemento")
    plt.ylabel("Masa Molar (g/mol)")
    plt.grid(alpha=0.7)
    plt.show()
# Gráfica 3: Viscosidad vs Temperatura
def plot_viscosity_temperature():
  
    temperatures = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]  
    viscosities = [150, 130, 110, 95, 80, 65, 50, 40, 30, 20]  
    
    plt.figure(figsize=(8, 5))
    plt.plot(temperatures, viscosities, marker='o', color='red')
    plt.title("Relación entre viscosidad y temperatura (Aceite de Motor)")
    plt.xlabel("Temperatura (°C)")
    plt.ylabel("Viscosidad relativa")
    plt.grid(alpha=0.7)
    plt.show()
    from rdkit import Chem
from rdkit.Chem import AllChem
import py3Dmol
def generate_3d_model(smiles):
    """
    Genera el modelo 3D de una molécula a partir de su notación SMILES.
    :param smiles: Notación SMILES de la molécula.
    :return: Visualización del modelo 3D interactivo.
    """
    mol = Chem.MolFromSmiles(smiles)
    mol = Chem.AddHs(mol)  
    AllChem.EmbedMolecule(mol, AllChem.ETKDG())  
    
    block = Chem.MolToMolBlock(mol)
    viewer = py3Dmol.view(width=400, height=400)
    viewer.addModel(block, 'mol')
    viewer.setStyle({'stick': {}})
    viewer.zoomTo()
    return viewer
# Lista completa de moléculas con SMILES
molecules = {
    "Agua": "O",
    "Etanol": "CCO",
    "Ciclohexano": "C1CCCCC1",
    "Ácido acético": "CC(=O)O",
    "Benceno": "C1=CC=CC=C1",
    "Metano": "C",
    "Metanol": "CO",
    "Etano": "CC",
    "Propano": "CCC",
    "Butano": "CCCC",
    "Acetona": "CC(=O)C",
    "Glicina": "C(C(=O)O)N",
    "Alanina": "CC(C(=O)O)N",
    "Fenol": "C1=CC=C(C=C1)O",
    "Tetrahidrofurano (THF)": "C1CCOC1",
    "Etanolamina": "NCCO",
    "Ácido aspártico": "C(C(=O)O)(N)C(=O)O",
    "Trietilamina": "CCN(CC)CC",
    "Dietil éter": "CCOCC",
    "Ácido láctico": "C(C(=O)O)O",
    "Naftaleno": "C1=CC=CC2=CC=CC=C12",
    "Dimetilformamida (DMF)": "CN(C)C=O",
    "Ácido cítrico": "C(C(=O)O)C(C(=O)O)O"
}
def display_molecules():
    for name, smiles in molecules.items():
        print(f"Modelo 3D de: {name}")
        viewer = generate_3d_model(smiles)
        viewer.show()
